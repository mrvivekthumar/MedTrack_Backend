services:
  # Your existing PostgreSQL service
  postgres:
    container_name: medtrack_postgres
    image: postgres
    environment:
      POSTGRES_USER: duhacks
      POSTGRES_PASSWORD: Mr.VivekThumar@2004
      POSTGRES_DB: duhacks  # ✅ ADD: Explicit database name
      PGDATA: /var/lib/postgresql/data
    ports:
      - 5433:5432
    volumes:
      - postgres_data:/var/lib/postgresql/data  # ✅ ADD: Persistent storage
    networks:
      - kafka-network
    healthcheck:  # ✅ ADD: Health check
      test: ["CMD-SHELL", "pg_isready -U duhacks -d duhacks"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Zookeeper - Required for Kafka
  zookeeper:
    container_name: medtrack_zookeeper
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_SYNC_LIMIT: 2  # ✅ ADD: Better stability
    ports:
      - 2181:2181
    volumes:
      - zookeeper_data:/var/lib/zookeeper/data  # ✅ ADD: Persistent storage
      - zookeeper_logs:/var/lib/zookeeper/log
    networks:
      - kafka-network
    healthcheck:  # ✅ ADD: Health check
      test: ["CMD", "echo", "ruok", "|", "nc", "localhost", "2181"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Kafka Broker
 # Kafka Broker
  kafka:
    container_name: medtrack_kafka
    image: confluentinc/cp-kafka:7.4.0  # ✅ FIX: Use specific stable version
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://kafka:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT_INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: true
    networks:
      - kafka-network
    healthcheck:  # ✅ ADD: Health check
      test: ["CMD", "kafka-broker-api-versions", "--bootstrap-server", "localhost:9092"]
      interval: 10s
      timeout: 10s
      retries: 10
      start_period: 40s
    restart: unless-stopped  # ✅ ADD: Auto-restart on failure

  # Kafka UI (Fixed configuration)
  kafka-ui:
    container_name: medtrack_kafka_ui
    image: provectuslabs/kafka-ui:latest
    depends_on:
      kafka:
        condition: service_healthy  # ✅ FIX: Wait for healthy kafka
    ports:
      - 8080:8080
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:29092  # ✅ FIX: Use internal network
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
      
      # ✅ ADD: Better UI configuration
      DYNAMIC_CONFIG_ENABLED: true
      LOGGING_LEVEL_COM_PROVECTUS: DEBUG
    networks:
      - kafka-network
    restart: unless-stopped

# ✅ ADD: Volumes for persistent data
volumes:
  postgres_data:
  kafka_data:
  zookeeper_data:
  zookeeper_logs:

# Add network configuration
networks:
  kafka-network:
    driver: bridge